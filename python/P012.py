from math import ceil
################################################################################
def P012() -> int:
    """
    The sequence of triangle numbers is generated by adding the natural numbers.
    So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28.
    What is the value of the first triangle number to have over five hundred
        divisors?

    """

    i = 1
    tri = 1
    n_divisors = 1
    #div_dict = {1:set([1])}
    while n_divisors < 500:
        i  +=1
        tri+=i

        divisors = set([1,tri])
        for n in range(2,ceil(tri**0.5)):
            if n not in divisors: # don't check if we've already added it
                if tri % n == 0:
                    divisors = divisors | set([n,tri//n])

        n_divisors = len(divisors)

        print(len(divisors))

    return tri



if __name__=="__main__":
    print(P012())
